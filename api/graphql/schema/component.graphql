type Component {
  id: ID!
  name: String!

  team: Team!
  samples: [Sample!]!
}

type Sample {
  id: ID!
  name: String!

  component: Component!
  renders: [Render!]!
}

type Render {
  id: ID!
  imageUrl: String
  html: String!
  branch: String!
  commit: String!

  sample: Sample!
}

type Mutation {
  createComponent(input: CreateComponentInput!): CreateComponentResponse
  createSample(input: CreateSampleInput!): CreateSampleResponse
  createRender(input: CreateRenderInput!): CreateRenderResponse
}

input CreateComponentInput {
  teamId: ID!
  name: String!
}

type CreateComponentResponse {
  component: Component
  status: MutationStatus!
}

input CreateSampleInput {
  componentId: ID!
  name: String!
}

type CreateSampleResponse {
  sample: Sample
  status: MutationStatus!
}

input CreateRenderInput {
  componentName: String!
  sampleName: String!
  html: String!
  imageUrl: String
  branch: String!
  commit: String!
}

type CreateRenderResponse {
  render: Render
  status: MutationStatus!
}
