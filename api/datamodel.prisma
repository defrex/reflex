type User {
  id: ID! @unique
  createdAt: DateTime!
  updatedAt: DateTime!

  email: String! @unique
  name: String!
  githubAccessToken: String
  figmaAccessToken: String
  figmaRefreshToken: String

  memberships: [Membership]!
}

enum Role {
  MEMBER
  ADMIN
}

type Membership {
  id: ID! @unique
  createdAt: DateTime!
  updatedAt: DateTime!

  role: Role! @default(value: MEMBER)

  user: User!
  team: Team!
}

type Team {
  id: ID! @unique
  createdAt: DateTime!
  updatedAt: DateTime!

  name: String!

  memberships: [Membership]!
  components: [Component]!
  repos: [Repo]!
}

type Component {
  id: ID! @unique
  createdAt: DateTime!
  updatedAt: DateTime!

  name: String!

  team: Team!
  samples: [Sample]!
}

type Sample {
  id: ID! @unique
  createdAt: DateTime!
  updatedAt: DateTime!

  name: String!

  component: Component!
  renders: [Render]!
}

type Render {
  id: ID! @unique
  createdAt: DateTime!
  updatedAt: DateTime!

  imageUrl: String
  html: String
  branch: String!
  commit: String!

  sample: Sample!
  check: Check
}

type Check {
  id: ID! @unique
  createdAt: DateTime!
  updatedAt: DateTime!

  githubCheckId: Int @unique
  branch: String!
  commit: String!

  renders: [Render]!
  repo: Repo
}

type Repo {
  id: ID! @unique
  createdAt: DateTime!
  updatedAt: DateTime!

  owner: String!
  name: String!

  checks: [Check]!
  team: Team
}

type CliAuthSession {
  id: ID! @unique
  createdAt: DateTime!
  updatedAt: DateTime!
  expiresAt: DateTime!

  authenticatedUser: User
}
